<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rebus on The Amateur Data Scientist</title>
    <link>/tags/rebus/</link>
    <description>Recent content in Rebus on The Amateur Data Scientist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Nov 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/rebus/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Wrangling and Manipulation of Monthly Philippine Consumer Price Index</title>
      <link>/post/wrangling-manipulation-ph-cpi-data-table/</link>
      <pubDate>Thu, 15 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/wrangling-manipulation-ph-cpi-data-table/</guid>
      <description>1 More Paths, More Knowledge2 Extension of data.frame3 Where | Order By, Select | Update, Group By4 Monthly Philippine Consumer Price Index 1994 Jan to 2018 Jun4.1 Finagler4.2 ISO 8601 Date4.3 Item Category Levels4.4 Geographic Levels5 The Power of Packages6 Code7 References1 More Paths, More KnowledgeIn a series of posts, I discussed how I turned a messy data, the monthly Philippine consumer price index to tidy data, using packages and functions in the tidyverse.</description>
    </item>
    
    <item>
      <title>From Messy to Tidy: Separate the Category</title>
      <link>/post/messy-tidy-separate-category/</link>
      <pubDate>Sat, 13 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/messy-tidy-separate-category/</guid>
      <description>1 Dates in One Column2 Deciphering the Code Column3 Split, Stretch, and Trickle Down3.1 Cut the Dots3.2 Count the Dots3.3 Spread the Categories3.4 Pull the One Above4 Join and Split5 Up Next6 Code7 References1 Dates in One ColumnThe first post in the From Messy to Tidy series introduced us to the idea of tidy data (Wickham 2014):</description>
    </item>
    
    <item>
      <title>Gathering the Wolf Packs: Scraping World Cup 2018 Squads from Wikipedia</title>
      <link>/post/2018-06-14-world-cup-2018-squads-scrape-wikipedia/</link>
      <pubDate>Thu, 14 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018-06-14-world-cup-2018-squads-scrape-wikipedia/</guid>
      <description>1 The Hunt for a Decent List of World Cup 2018 Squads2 A Template for Scraping Tables from Wikipedia2.1 Inspect Element2.2 Find and Copy the XPath2.3 Scrape Tables with rvest3 Scraping World Cup 2018 Squads All at Once3.1 National Teams and Groupings3.2 The Scraping Function3.3 Gather All the Squads4 Tidying the World Cup Squads5 World Cup 2018 Squads and Group1 The Hunt for a Decent List of World Cup 2018 SquadsWith World Cup 2018 to kick off today, I was in search for the past days for a list all the players that will represent their country in the tournament.</description>
    </item>
    
  </channel>
</rss>